# Generated by Django 5.2.5 on 2025-09-17 16:27

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, unique=True, verbose_name='Janri')),
            ],
            options={
                'verbose_name': 'Janr',
                'verbose_name_plural': 'Janrlar',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nomi')),
                ('director', models.CharField(max_length=255, verbose_name='Rejissori')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Tavsifi')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Rasmi')),
                ('video', models.FileField(blank=True, null=True, upload_to='videos/', validators=[django.core.validators.FileExtensionValidator(['mp4', 'mov', 'avi', 'mkv'])], verbose_name='Videosi')),
                ('views', models.IntegerField(default=0, verbose_name="Ko'rishlar soni")),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1990, message='1990-yildan katta yilni kiriting'), django.core.validators.MaxValueValidator(2025, message='2025 yildan kichik yilni kiriting')], verbose_name='Yili')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.genre', verbose_name='Janri')),
            ],
            options={
                'verbose_name': 'Kino',
                'verbose_name_plural': 'Kinolar',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500, verbose_name='Matni')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.movie', verbose_name='Kino')),
            ],
            options={
                'verbose_name': 'Izoh',
                'verbose_name_plural': 'Izohlar',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user/images/')),
                ('job', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=13, null=True)),
                ('facebook', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter', models.CharField(blank=True, max_length=255, null=True)),
                ('instagram', models.CharField(blank=True, max_length=255, null=True)),
                ('telegram', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil',
                'verbose_name_plural': 'Profillar',
                'ordering': ['job'],
            },
        ),
    ]
